{"ast":null,"code":"var _jsxFileName = \"/home/meirof/React/React-Fundamentals-Exercises/L3. State Management/2. Passing Data II/Starter/src/App.js\";\nimport \"./App.css\";\nimport logo from \"./logo.svg\";\nimport Dashboard from \"./Dashboard\";\n\n// Display a list of movies where each movie contains a list of users that favorited it.\n// For detailed instructions, refer to Instructions.md.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst profiles = [{\n  id: 1,\n  userID: \"1\",\n  favoriteMovieID: \"1\"\n}, {\n  id: 2,\n  userID: \"2\",\n  favoriteMovieID: \"1\"\n}, {\n  id: 3,\n  userID: \"4\",\n  favoriteMovieID: \"5\"\n}, {\n  id: 4,\n  userID: \"5\",\n  favoriteMovieID: \"2\"\n}, {\n  id: 5,\n  userID: \"3\",\n  favoriteMovieID: \"5\"\n}, {\n  id: 6,\n  userID: \"6\",\n  favoriteMovieID: \"4\"\n}];\nconst users = {\n  1: {\n    id: 1,\n    name: \"Jane Cruz\",\n    userName: \"coder\"\n  },\n  2: {\n    id: 2,\n    name: \"Matthew Johnson\",\n    userName: \"mpage\"\n  },\n  3: {\n    id: 3,\n    name: \"Autumn Green\",\n    userName: \"user123\"\n  },\n  4: {\n    id: 4,\n    name: \"John Doe\",\n    userName: \"user123\"\n  },\n  5: {\n    id: 5,\n    name: \"Lauren Carlson\",\n    userName: \"user123\"\n  },\n  6: {\n    id: 6,\n    name: \"Nicholas Lain\",\n    userName: \"user123\"\n  }\n};\nconst movies = {\n  1: {\n    id: 1,\n    name: \"Planet Earth 1\"\n  },\n  2: {\n    id: 2,\n    name: \"Selma\"\n  },\n  3: {\n    id: 3,\n    name: \"Million Dollar Baby\"\n  },\n  4: {\n    id: 4,\n    name: \"Forrest Gump\"\n  },\n  5: {\n    id: 5,\n    name: \"Get Out\"\n  }\n};\nconst App = () => {\n  let usersByMovie = {};\n\n  // Map the users by the movie they liked\n  profiles.forEach(profile => {\n    const movieID = profile.favoriteMovieID;\n    if (usersByMovie[movieID]) {\n      usersByMovie[movieID].push(profile.userID);\n    } else {\n      usersByMovie[movieID] = [profile.userID];\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"App-title\",\n        children: \"ReactND - Coding Practice\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"How Popular is Your Favorite Movie?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dashboard, {\n      usersByMovie: usersByMovie,\n      movies: movies,\n      users: users\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","Dashboard","profiles","id","userID","favoriteMovieID","users","name","userName","movies","App","usersByMovie","forEach","profile","movieID","push"],"sources":["/home/meirof/React/React-Fundamentals-Exercises/L3. State Management/2. Passing Data II/Starter/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport logo from \"./logo.svg\";\nimport Dashboard from \"./Dashboard\";\n\n// Display a list of movies where each movie contains a list of users that favorited it.\n// For detailed instructions, refer to Instructions.md.\n\nconst profiles = [\n  {\n    id: 1,\n    userID: \"1\",\n    favoriteMovieID: \"1\",\n  },\n  {\n    id: 2,\n    userID: \"2\",\n    favoriteMovieID: \"1\",\n  },\n  {\n    id: 3,\n    userID: \"4\",\n    favoriteMovieID: \"5\",\n  },\n  {\n    id: 4,\n    userID: \"5\",\n    favoriteMovieID: \"2\",\n  },\n  {\n    id: 5,\n    userID: \"3\",\n    favoriteMovieID: \"5\",\n  },\n  {\n    id: 6,\n    userID: \"6\",\n    favoriteMovieID: \"4\",\n  },\n];\n\nconst users = {\n  1: {\n    id: 1,\n    name: \"Jane Cruz\",\n    userName: \"coder\",\n  },\n  2: {\n    id: 2,\n    name: \"Matthew Johnson\",\n    userName: \"mpage\",\n  },\n  3: {\n    id: 3,\n    name: \"Autumn Green\",\n    userName: \"user123\",\n  },\n  4: {\n    id: 4,\n    name: \"John Doe\",\n    userName: \"user123\",\n  },\n  5: {\n    id: 5,\n    name: \"Lauren Carlson\",\n    userName: \"user123\",\n  },\n  6: {\n    id: 6,\n    name: \"Nicholas Lain\",\n    userName: \"user123\",\n  },\n};\n\nconst movies = {\n  1: {\n    id: 1,\n    name: \"Planet Earth 1\",\n  },\n  2: {\n    id: 2,\n    name: \"Selma\",\n  },\n  3: {\n    id: 3,\n    name: \"Million Dollar Baby\",\n  },\n  4: {\n    id: 4,\n    name: \"Forrest Gump\",\n  },\n  5: {\n    id: 5,\n    name: \"Get Out\",\n  },\n};\n\nconst App = () => {\n  let usersByMovie = {};\n\n  // Map the users by the movie they liked\n  profiles.forEach((profile) => {\n    const movieID = profile.favoriteMovieID;\n\n    if (usersByMovie[movieID]) {\n      usersByMovie[movieID].push(profile.userID);\n    } else {\n      usersByMovie[movieID] = [profile.userID];\n    }\n  });\n\n  return (\n    <div>\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <h1 className=\"App-title\">ReactND - Coding Practice</h1>\n      </header>\n      <h2>How Popular is Your Favorite Movie?</h2>\n      <Dashboard usersByMovie={usersByMovie} movies={movies} users={users} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}