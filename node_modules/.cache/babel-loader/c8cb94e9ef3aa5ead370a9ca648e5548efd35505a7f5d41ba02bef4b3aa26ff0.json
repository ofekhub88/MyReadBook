{"ast":null,"code":"var _jsxFileName = \"/home/meirof/React/React-Fundamentals-Exercises/L4. Hooks/2. State and Side Effects/Solution/src/Game.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = props => {\n  _s();\n  const [value1, setValue1] = useState(null);\n  const [value2, setValue2] = useState(null);\n  const [value3, setValue3] = useState(null);\n  const [proposedAnswer, setProposedAnswer] = useState(null);\n\n  // Calls makeNewQuestion() when the component has been mounted, then sets values\n  useEffect(() => {\n    let valuesArray = makeNewQuestion();\n    setValue1(valuesArray[0]);\n    setValue2(valuesArray[1]);\n    setValue3(valuesArray[2]);\n    setProposedAnswer(valuesArray[3]);\n  }, []);\n  const makeNewQuestion = () => {\n    const value1 = Math.floor(Math.random() * 100);\n    const value2 = Math.floor(Math.random() * 100);\n    const value3 = Math.floor(Math.random() * 100);\n    const proposedAnswer = Math.floor(Math.random() * 3) + (value1 + value2 + value3);\n    return [value1, value2, value3, proposedAnswer];\n  };\n  const refresh = newValuesArray => {\n    setValue1(newValuesArray[0]);\n    setValue2(newValuesArray[1]);\n    setValue3(newValuesArray[2]);\n    setProposedAnswer(newValuesArray[3]);\n  };\n  const handleAnswer = event => {\n    const newValuesArray = makeNewQuestion();\n    refresh(newValuesArray);\n    const answerWasCorrect = evaluateAnswer(event.target.name);\n    props.handleAnswer(answerWasCorrect);\n  };\n  const evaluateAnswer = givenAnswer => {\n    const corrAnswer = value1 + value2 + value3;\n    return corrAnswer === proposedAnswer && givenAnswer === \"true\" || corrAnswer !== proposedAnswer && givenAnswer === \"false\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"equation\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text\",\n        children: `${value1} + ${value2} + ${value3} = ${proposedAnswer}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAnswer,\n      name: \"true\",\n      children: \"True\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      name: \"false\",\n      onClick: handleAnswer,\n      children: \"False\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"6kDpDwm4mrUzB5RjAq27q7iYrRI=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["useState","useEffect","Game","props","value1","setValue1","value2","setValue2","value3","setValue3","proposedAnswer","setProposedAnswer","valuesArray","makeNewQuestion","Math","floor","random","refresh","newValuesArray","handleAnswer","event","answerWasCorrect","evaluateAnswer","target","name","givenAnswer","corrAnswer"],"sources":["/home/meirof/React/React-Fundamentals-Exercises/L4. Hooks/2. State and Side Effects/Solution/src/Game.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst Game = (props) => {\n  const [value1, setValue1] = useState(null);\n  const [value2, setValue2] = useState(null);\n  const [value3, setValue3] = useState(null);\n  const [proposedAnswer, setProposedAnswer] = useState(null);\n\n  // Calls makeNewQuestion() when the component has been mounted, then sets values\n  useEffect(() => {\n    let valuesArray = makeNewQuestion();\n    setValue1(valuesArray[0]);\n    setValue2(valuesArray[1]);\n    setValue3(valuesArray[2]);\n    setProposedAnswer(valuesArray[3]);\n  }, []);\n\n  const makeNewQuestion = () => {\n    const value1 = Math.floor(Math.random() * 100);\n    const value2 = Math.floor(Math.random() * 100);\n    const value3 = Math.floor(Math.random() * 100);\n\n    const proposedAnswer =\n      Math.floor(Math.random() * 3) + (value1 + value2 + value3);\n\n    return [value1, value2, value3, proposedAnswer];\n  };\n\n  const refresh = (newValuesArray) => {\n    setValue1(newValuesArray[0]);\n    setValue2(newValuesArray[1]);\n    setValue3(newValuesArray[2]);\n    setProposedAnswer(newValuesArray[3]);\n  };\n\n  const handleAnswer = (event) => {\n    const newValuesArray = makeNewQuestion();\n    refresh(newValuesArray);\n    const answerWasCorrect = evaluateAnswer(event.target.name);\n    props.handleAnswer(answerWasCorrect);\n  };\n\n  const evaluateAnswer = (givenAnswer) => {\n    const corrAnswer = value1 + value2 + value3;\n\n    return (\n      (corrAnswer === proposedAnswer && givenAnswer === \"true\") ||\n      (corrAnswer !== proposedAnswer && givenAnswer === \"false\")\n    );\n  };\n\n  return (\n    <div>\n      <div className=\"equation\">\n        <p className=\"text\">{`${value1} + ${value2} + ${value3} = ${proposedAnswer}`}</p>\n      </div>\n      <button onClick={handleAnswer} name=\"true\">\n        True\n      </button>\n      <button name=\"false\" onClick={handleAnswer}>\n        False\n      </button>\n    </div>\n  );\n};\n\nexport default Game;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAE5C,MAAMC,IAAI,GAAIC,KAAK,IAAK;EAAA;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACM,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACU,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;;EAE1D;EACAC,SAAS,CAAC,MAAM;IACd,IAAIW,WAAW,GAAGC,eAAe,EAAE;IACnCR,SAAS,CAACO,WAAW,CAAC,CAAC,CAAC,CAAC;IACzBL,SAAS,CAACK,WAAW,CAAC,CAAC,CAAC,CAAC;IACzBH,SAAS,CAACG,WAAW,CAAC,CAAC,CAAC,CAAC;IACzBD,iBAAiB,CAACC,WAAW,CAAC,CAAC,CAAC,CAAC;EACnC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,eAAe,GAAG,MAAM;IAC5B,MAAMT,MAAM,GAAGU,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,GAAG,CAAC;IAC9C,MAAMV,MAAM,GAAGQ,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,GAAG,CAAC;IAC9C,MAAMR,MAAM,GAAGM,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,GAAG,CAAC;IAE9C,MAAMN,cAAc,GAClBI,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,CAAC,CAAC,IAAIZ,MAAM,GAAGE,MAAM,GAAGE,MAAM,CAAC;IAE5D,OAAO,CAACJ,MAAM,EAAEE,MAAM,EAAEE,MAAM,EAAEE,cAAc,CAAC;EACjD,CAAC;EAED,MAAMO,OAAO,GAAIC,cAAc,IAAK;IAClCb,SAAS,CAACa,cAAc,CAAC,CAAC,CAAC,CAAC;IAC5BX,SAAS,CAACW,cAAc,CAAC,CAAC,CAAC,CAAC;IAC5BT,SAAS,CAACS,cAAc,CAAC,CAAC,CAAC,CAAC;IAC5BP,iBAAiB,CAACO,cAAc,CAAC,CAAC,CAAC,CAAC;EACtC,CAAC;EAED,MAAMC,YAAY,GAAIC,KAAK,IAAK;IAC9B,MAAMF,cAAc,GAAGL,eAAe,EAAE;IACxCI,OAAO,CAACC,cAAc,CAAC;IACvB,MAAMG,gBAAgB,GAAGC,cAAc,CAACF,KAAK,CAACG,MAAM,CAACC,IAAI,CAAC;IAC1DrB,KAAK,CAACgB,YAAY,CAACE,gBAAgB,CAAC;EACtC,CAAC;EAED,MAAMC,cAAc,GAAIG,WAAW,IAAK;IACtC,MAAMC,UAAU,GAAGtB,MAAM,GAAGE,MAAM,GAAGE,MAAM;IAE3C,OACGkB,UAAU,KAAKhB,cAAc,IAAIe,WAAW,KAAK,MAAM,IACvDC,UAAU,KAAKhB,cAAc,IAAIe,WAAW,KAAK,OAAQ;EAE9D,CAAC;EAED,oBACE;IAAA,wBACE;MAAK,SAAS,EAAC,UAAU;MAAA,uBACvB;QAAG,SAAS,EAAC,MAAM;QAAA,UAAG,GAAErB,MAAO,MAAKE,MAAO,MAAKE,MAAO,MAAKE,cAAe;MAAC;QAAA;QAAA;QAAA;MAAA;IAAK;MAAA;MAAA;MAAA;IAAA,QAC7E,eACN;MAAQ,OAAO,EAAES,YAAa;MAAC,IAAI,EAAC,MAAM;MAAA,UAAC;IAE3C;MAAA;MAAA;MAAA;IAAA,QAAS,eACT;MAAQ,IAAI,EAAC,OAAO;MAAC,OAAO,EAAEA,YAAa;MAAA,UAAC;IAE5C;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAEV,CAAC;AAAC,GA9DIjB,IAAI;AAAA,KAAJA,IAAI;AAgEV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}