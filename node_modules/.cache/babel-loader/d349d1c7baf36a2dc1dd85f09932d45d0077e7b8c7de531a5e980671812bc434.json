{"ast":null,"code":"var _jsxFileName = \"/mnt/c/MyRep/React/React-Fundamentals-Exercises/L3. State Management/1. Passing Data I/Starter/src/App.js\";\nimport \"./App.css\";\nimport logo from \"./logo.svg\";\n\n// Use React and the data below to display a list of users alongside their favorite movies.\n// For detailed instructions, refer to Instructions.md.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst profiles = [{\n  id: 1,\n  userID: \"1\",\n  favoriteMovieID: \"1\"\n}, {\n  id: 2,\n  userID: \"2\",\n  favoriteMovieID: \"1\"\n}, {\n  id: 3,\n  userID: \"4\",\n  favoriteMovieID: \"5\"\n}, {\n  id: 4,\n  userID: \"5\",\n  favoriteMovieID: \"2\"\n}, {\n  id: 5,\n  userID: \"3\",\n  favoriteMovieID: \"5\"\n}, {\n  id: 6,\n  userID: \"6\",\n  favoriteMovieID: \"4\"\n}];\nconst users = {\n  1: {\n    id: 1,\n    name: \"Jane Cruz\",\n    userName: \"coder\"\n  },\n  2: {\n    id: 2,\n    name: \"Matthew Johnson\",\n    userName: \"mpage\"\n  },\n  3: {\n    id: 3,\n    name: \"Autumn Green\",\n    userName: \"user123\"\n  },\n  4: {\n    id: 4,\n    name: \"John Doe\",\n    userName: \"user123\"\n  },\n  5: {\n    id: 5,\n    name: \"Lauren Carlson\",\n    userName: \"user123\"\n  },\n  6: {\n    id: 6,\n    name: \"Nicholas Lain\",\n    userName: \"user123\"\n  }\n};\nconst movies = {\n  1: {\n    id: 1,\n    name: \"Planet Earth 1\"\n  },\n  2: {\n    id: 2,\n    name: \"Selma\"\n  },\n  3: {\n    id: 3,\n    name: \"Million Dollar Baby\"\n  },\n  4: {\n    id: 4,\n    name: \"Forrest Gump\"\n  },\n  5: {\n    id: 5,\n    name: \"Get Out\"\n  }\n};\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"App-title\",\n        children: \"ReactND - Coding Practice\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Favorite Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), profiles.map(profile => {\n        const userName = users[profile.userID].name;\n        const favMovieName = movies[profile.favoriteMovieID].name;\n        return (\n          /*#__PURE__*/\n          /*\n            You need to include the `key` property every time you create list\n            elements in React. The `key` property is necessary because it enables\n            React to perform reconciliation (https://reactjs.org/docs/reconciliation.html)\n            */\n          _jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: `${userName}'s favorite movie is \"${favMovieName}.\"`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this)\n          }, profile.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)\n        );\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","profiles","id","userID","favoriteMovieID","users","name","userName","movies","App","map","profile","favMovieName"],"sources":["/mnt/c/MyRep/React/React-Fundamentals-Exercises/L3. State Management/1. Passing Data I/Starter/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport logo from \"./logo.svg\";\n\n// Use React and the data below to display a list of users alongside their favorite movies.\n// For detailed instructions, refer to Instructions.md.\n\nconst profiles = [\n  {\n    id: 1,\n    userID: \"1\",\n    favoriteMovieID: \"1\",\n  },\n  {\n    id: 2,\n    userID: \"2\",\n    favoriteMovieID: \"1\",\n  },\n  {\n    id: 3,\n    userID: \"4\",\n    favoriteMovieID: \"5\",\n  },\n  {\n    id: 4,\n    userID: \"5\",\n    favoriteMovieID: \"2\",\n  },\n  {\n    id: 5,\n    userID: \"3\",\n    favoriteMovieID: \"5\",\n  },\n  {\n    id: 6,\n    userID: \"6\",\n    favoriteMovieID: \"4\",\n  },\n];\n\nconst users = {\n  1: {\n    id: 1,\n    name: \"Jane Cruz\",\n    userName: \"coder\",\n  },\n  2: {\n    id: 2,\n    name: \"Matthew Johnson\",\n    userName: \"mpage\",\n  },\n  3: {\n    id: 3,\n    name: \"Autumn Green\",\n    userName: \"user123\",\n  },\n  4: {\n    id: 4,\n    name: \"John Doe\",\n    userName: \"user123\",\n  },\n  5: {\n    id: 5,\n    name: \"Lauren Carlson\",\n    userName: \"user123\",\n  },\n  6: {\n    id: 6,\n    name: \"Nicholas Lain\",\n    userName: \"user123\",\n  },\n};\n\nconst movies = {\n  1: {\n    id: 1,\n    name: \"Planet Earth 1\",\n  },\n  2: {\n    id: 2,\n    name: \"Selma\",\n  },\n  3: {\n    id: 3,\n    name: \"Million Dollar Baby\",\n  },\n  4: {\n    id: 4,\n    name: \"Forrest Gump\",\n  },\n  5: {\n    id: 5,\n    name: \"Get Out\",\n  },\n};\n\nconst App = () => {\n  return (\n    <div>\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <h1 className=\"App-title\">ReactND - Coding Practice</h1>\n      </header>\n      <ul>\n        <h2>Favorite Movies</h2>\n\n        {/*\n          For each object in the profiles array, make a list of JSX element.\n          The map function returns a new array, which will only have list\n          elements in it. React will automatically know how to render an\n          array of JSX objects.\n          */}\n        {profiles.map((profile) => {\n          const userName = users[profile.userID].name;\n          const favMovieName = movies[profile.favoriteMovieID].name;\n\n          return (\n            /*\n              You need to include the `key` property every time you create list\n              elements in React. The `key` property is necessary because it enables\n              React to perform reconciliation (https://reactjs.org/docs/reconciliation.html)\n              */\n            <li key={profile.id}>\n              {/* If the syntax below looks unfamiliar, please take the following\n              course:\n              https://www.udacity.com/course/es6-javascript-improved--ud356\n                */}\n              <p>{`${userName}'s favorite movie is \"${favMovieName}.\"`}</p>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}