{"ast":null,"code":"var _jsxFileName = \"/home/meirof/React/React-Fundamentals-C1-React-Contacts/src/components/ImageInput.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst readFileAsDataURL = file => new Promise(resolve => {\n  const reader = new FileReader();\n  reader.onload = event => {\n    resolve(event.target.result);\n  };\n  reader.readAsDataURL(file);\n});\nconst resizeImage = (imageURL, canvas, maxHeight) => new Promise(resolve => {\n  const image = new Image();\n  image.onload = () => {\n    const context = canvas.getContext(\"2d\");\n    if (image.height > maxHeight) {\n      image.width *= maxHeight / image.height;\n      image.height = maxHeight;\n    }\n    context.clearRect(0, 0, canvas.width, canvas.height);\n    canvas.width = image.width;\n    canvas.height = image.height;\n    context.drawImage(image, 0, 0, image.width, image.height);\n    resolve(canvas.toDataURL(\"image/jpeg\"));\n  };\n  image.src = imageURL;\n});\n\n/**\n * A custom <input> that dynamically reads and resizes image files before\n * submitting them to the server as data URLs. Also, shows a preview of the image.\n */\n\nconst ImageInput = _ref => {\n  _s();\n  let {\n    maxHeight,\n    className,\n    name\n  } = _ref;\n  let fileInput;\n  const [value, setValue] = useState(\"\");\n  const [canvas, setCanvas] = useState(\"\");\n  const style = {\n    position: \"relative\"\n  };\n  const handleFormReset = () => {\n    setValue(\"\");\n  };\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    if (file && file.type.match(/^image\\//)) {\n      readFileAsDataURL(file).then(originalURL => {\n        resizeImage(originalURL, canvas, maxHeight).then(url => {\n          setValue(url);\n        });\n      });\n    } else {\n      setValue(\"\");\n    }\n  };\n  useEffect(() => {\n    setCanvas(document.createElement(\"canvas\"));\n    fileInput.form.addEventListener(\"reset\", handleFormReset);\n    return () => {\n      if (fileInput) {\n        fileInput.form.removeEventListener(\"reset\", handleFormReset);\n      }\n    };\n  }, [fileInput]);\n  if (value) {\n    style.backgroundImage = `url(\"${value}\")`;\n    style.backgroundRepeat = \"no-repeat\";\n    style.backgroundPosition = \"center\";\n    style.backgroundSize = \"cover\";\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    style: style,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"hidden\",\n      name: name,\n      value: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: node => fileInput = node,\n      type: \"file\",\n      onChange: handleFileChange,\n      style: {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        height: \"100%\",\n        opacity: 0\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageInput, \"hqrd6TgKn/+1mfx+ANVrgTWITp0=\");\n_c = ImageInput;\nImageInput.propTypes = {\n  className: PropTypes.string,\n  name: PropTypes.string,\n  maxHeight: PropTypes.number\n};\nexport default ImageInput;\nvar _c;\n$RefreshReg$(_c, \"ImageInput\");","map":{"version":3,"names":["useState","useEffect","PropTypes","readFileAsDataURL","file","Promise","resolve","reader","FileReader","onload","event","target","result","readAsDataURL","resizeImage","imageURL","canvas","maxHeight","image","Image","context","getContext","height","width","clearRect","drawImage","toDataURL","src","ImageInput","className","name","fileInput","value","setValue","setCanvas","style","position","handleFormReset","handleFileChange","files","type","match","then","originalURL","url","document","createElement","form","addEventListener","removeEventListener","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","node","top","left","opacity","propTypes","string","number"],"sources":["/home/meirof/React/React-Fundamentals-C1-React-Contacts/src/components/ImageInput.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst readFileAsDataURL = (file) =>\n  new Promise((resolve) => {\n    const reader = new FileReader();\n\n    reader.onload = (event) => {\n      resolve(event.target.result);\n    };\n\n    reader.readAsDataURL(file);\n  });\n\nconst resizeImage = (imageURL, canvas, maxHeight) =>\n  new Promise((resolve) => {\n    const image = new Image();\n\n    image.onload = () => {\n      const context = canvas.getContext(\"2d\");\n\n      if (image.height > maxHeight) {\n        image.width *= maxHeight / image.height;\n        image.height = maxHeight;\n      }\n\n      context.clearRect(0, 0, canvas.width, canvas.height);\n      canvas.width = image.width;\n      canvas.height = image.height;\n\n      context.drawImage(image, 0, 0, image.width, image.height);\n\n      resolve(canvas.toDataURL(\"image/jpeg\"));\n    };\n\n    image.src = imageURL;\n  });\n\n/**\n * A custom <input> that dynamically reads and resizes image files before\n * submitting them to the server as data URLs. Also, shows a preview of the image.\n */\n\nconst ImageInput = ({ maxHeight, className, name }) => {\n  let fileInput;\n\n  const [value, setValue] = useState(\"\");\n  const [canvas, setCanvas] = useState(\"\");\n\n  const style = {\n    position: \"relative\",\n  };\n\n  const handleFormReset = () => {\n    setValue(\"\");\n  };\n\n  const handleFileChange = (event) => {\n    const file = event.target.files[0];\n\n    if (file && file.type.match(/^image\\//)) {\n      readFileAsDataURL(file).then((originalURL) => {\n        resizeImage(originalURL, canvas, maxHeight).then((url) => {\n          setValue(url);\n        });\n      });\n    } else {\n      setValue(\"\");\n    }\n  };\n\n  useEffect(() => {\n    setCanvas(document.createElement(\"canvas\"));\n    fileInput.form.addEventListener(\"reset\", handleFormReset);\n\n    return () => {\n      if (fileInput) {\n        fileInput.form.removeEventListener(\"reset\", handleFormReset);\n      }\n    };\n  }, [fileInput]);\n\n  if (value) {\n    style.backgroundImage = `url(\"${value}\")`;\n    style.backgroundRepeat = \"no-repeat\";\n    style.backgroundPosition = \"center\";\n    style.backgroundSize = \"cover\";\n  }\n\n  return (\n    <div className={className} style={style}>\n      <input type=\"hidden\" name={name} value={value} />\n      <input\n        ref={(node) => (fileInput = node)}\n        type=\"file\"\n        onChange={handleFileChange}\n        style={{\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          width: \"100%\",\n          height: \"100%\",\n          opacity: 0,\n        }}\n      />\n    </div>\n  );\n};\n\nImageInput.propTypes = {\n  className: PropTypes.string,\n  name: PropTypes.string,\n  maxHeight: PropTypes.number,\n};\n\nexport default ImageInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}